[
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'CustomerID' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'CustomerID' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'OrderDate' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'CustomerID' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'OrderDate' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'CustomerID' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'CustomerID' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'CustomerID' column in 'Customers' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Customers' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Customers' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "Why must the 'DepartmentID' column in 'Departments' of 'company_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "Which statement best describes a domain constraint on 'Email' in 'Employees' of 'company_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What happens if data in 'EmployeeID' of 'Employees' in 'company_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the database enforce valid data entry in 'DepartmentID' of 'Departments' in 'company_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of defining domain constraints on 'Email' in 'Employees' in 'company_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "Why must the 'Name' column in 'Departments' of 'company_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'Name' a candidate key in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'AssignmentID' a candidate key in the 'MissionAssignment' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'Country' a candidate key in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'MissionsCount' a candidate key in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'SatelliteID' a candidate key in the 'Satellite' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'AssignmentID' a candidate key in the 'MissionAssignment' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'AstronautID' a candidate key in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'EndDate' a candidate key in the 'Mission' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'Name' a candidate key in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'StartDate' a candidate key in the 'Mission' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What makes 'Name' a candidate key in the 'Mission' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "Why must the 'AstronautID' column in 'MissionAssignment' of 'space_research_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "Which statement best describes a domain constraint on 'SatelliteID' in 'Satellite' of 'space_research_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What happens if data in 'AstronautID' of 'MissionAssignment' in 'space_research_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the database enforce valid data entry in 'Name' of 'Mission' in 'space_research_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the purpose of defining domain constraints on 'Name' in 'Astronaut' in 'space_research_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "Why must the 'AstronautID' column in 'MissionAssignment' of 'space_research_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "Which statement best describes a domain constraint on 'MissionID' in 'MissionAssignment' of 'space_research_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Enrollments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Faculty' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Departments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Departments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Enrollments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Enrollments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Courses' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'CustomerID' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'CustomerID' column in 'Customers' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'CustomerID' column in 'Customers' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'OrderDate' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'OrderID' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'OrderDate' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'OrderID' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'OrderDate' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the 'OrderID' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'EnrollmentYear' column in 'Students' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'HODId' column in 'Departments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'Name' column in 'Students' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'DepartmentID' column in 'Faculty' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'Email' column in 'Faculty' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'FacultyID' column in 'Courses' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'DepartmentName' column in 'Departments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'HODId' column in 'Departments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'CourseName' column in 'Courses' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'CourseID' column in 'Enrollments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'CourseCode' column in 'Courses' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'EnrollmentID' column in 'Enrollments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'FacultyID' column in 'Courses' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the 'DepartmentID' column in 'Faculty' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "Why must the 'Name' column in 'Students' of 'college_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "Which statement best describes a domain constraint on 'DepartmentID' in 'Courses' of 'college_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What happens if data in 'DepartmentID' of 'Students' in 'college_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the database enforce valid data entry in 'FacultyID' of 'Courses' in 'college_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the purpose of defining domain constraints on 'FacultyID' in 'Faculty' in 'college_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "Why must the 'Grade' column in 'Enrollments' of 'college_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "Which statement best describes a domain constraint on 'DepartmentName' in 'Departments' of 'college_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What happens if data in 'Email' of 'Students' in 'college_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'EmployeeID' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Email' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Departments' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What makes 'Name' a candidate key in the 'Departments' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Departments' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Employees' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Departments' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Mission' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Astronaut' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'MissionAssignment' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Satellite' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Mission' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Orders' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Orders' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'Name' column in 'Farmer' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'FarmerID' column in 'Farm' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'CropID' column in 'Crop' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'SoilType' column in 'Crop' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'FarmID' column in 'Farm' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'Phone' column in 'Farmer' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'CropName' column in 'Crop' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'FarmID' column in 'Farm' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'FarmerID' column in 'Farm' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the 'QuantityKG' column in 'Harvest' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'DoctorID' column in 'Doctor' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'AppointmentID' column in 'Appointment' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'Email' column in 'Doctor' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'AppointmentDate' column in 'Appointment' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'RecordID' column in 'MedicalRecord' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'Phone' column in 'Patient' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'Phone' column in 'Patient' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'Reason' column in 'Appointment' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'FacultyID' in 'Faculty' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Faculty' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Faculty' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'Designation' in 'Faculty' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Faculty' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'DepartmentName' in 'Departments' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'OrderID' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'CustomerID' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Customers' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'OrderDate' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'OrderID' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'OrderDate' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'OrderDate' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'OrderDate' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Orders' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Orders' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the 'AppointmentID' column in 'Appointment' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the 'PatientID' column in 'Patient' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the 'Diagnosis' column in 'MedicalRecord' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the 'PatientID' column in 'Appointment' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the 'Email' column in 'Doctor' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the 'AppointmentDate' column in 'Appointment' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "Why must the 'QuantityKG' column in 'Harvest' of 'farming_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "Which statement best describes a domain constraint on 'Season' in 'Crop' of 'farming_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What happens if data in 'FarmerID' of 'Farm' in 'farming_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "How does the database enforce valid data entry in 'Name' of 'Farmer' in 'farming_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of defining domain constraints on 'HarvestDate' in 'Harvest' in 'farming_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "Why must the 'AreaInAcres' column in 'Farm' of 'farming_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "Which statement best describes a domain constraint on 'Season' in 'Crop' of 'farming_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Farm' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Harvest' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Crop' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Farmer' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Crop' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Harvest' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Farmer' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Crop' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Crop' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Harvest' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the 'Phone' column in 'Farmer' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the 'FarmerID' column in 'Farmer' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the 'HarvestDate' column in 'Harvest' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the 'FarmID' column in 'Farm' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the 'CropID' column in 'Harvest' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What makes 'FacultyID' a candidate key in the 'Faculty' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Students' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What makes 'Credits' a candidate key in the 'Courses' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What makes 'CourseName' a candidate key in the 'Courses' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What makes 'Email' a candidate key in the 'Faculty' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'MedicalRecord' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Appointment' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Doctor' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Patient' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'MedicalRecord' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'Phone' column in 'Customers' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'OrderID' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'CustomerID' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the purpose of key constraints on the 'OrderDate' column in 'Orders' of 'retail_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Astronaut' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'AstronautID' column in 'Astronaut' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Mission' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'SatelliteID' column in 'Satellite' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'AstronautID' column in 'MissionAssignment' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'MissionID' column in 'MissionAssignment' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'EmployeeID' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Departments' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Departments' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "Why must the 'HarvestDate' column in 'Harvest' of 'farming_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "Which statement best describes a domain constraint on 'AreaInAcres' in 'Farm' of 'farming_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What happens if data in 'AreaInAcres' of 'Farm' in 'farming_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the database enforce valid data entry in 'FarmerID' of 'Farmer' in 'farming_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What is the purpose of defining domain constraints on 'SoilType' in 'Crop' in 'farming_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "Why must the 'HarvestID' column in 'Harvest' of 'farming_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "Which statement best describes a domain constraint on 'Name' in 'Farmer' of 'farming_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What happens if data in 'AreaInAcres' of 'Farm' in 'farming_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the database enforce valid data entry in 'Season' of 'Crop' in 'farming_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What is the purpose of defining domain constraints on 'AreaInAcres' in 'Farm' in 'farming_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "Why must the 'QuantityKG' column in 'Harvest' of 'farming_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Farmer' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Harvest' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Harvest' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Crop' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Farmer' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Farmer' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Crop' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Crop' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'DoctorID' in 'Appointment' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Diagnosis' in 'MedicalRecord' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'AppointmentID' in 'Appointment' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Doctor' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'DateRecorded' in 'MedicalRecord' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Specialization' in 'Doctor' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'DoctorID' in 'Doctor' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Phone' in 'Patient' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'PatientID' column in 'Appointment' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'PatientID' column in 'Appointment' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Doctor' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'DoctorID' column in 'Appointment' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'DOB' column in 'Patient' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'DoctorID' column in 'Appointment' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "Why must the 'Name' column in 'Mission' of 'space_research_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "Which statement best describes a domain constraint on 'AssignmentID' in 'MissionAssignment' of 'space_research_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What happens if data in 'MissionsCount' of 'Astronaut' in 'space_research_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the database enforce valid data entry in 'SatelliteID' of 'Satellite' in 'space_research_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of defining domain constraints on 'Name' in 'Satellite' in 'space_research_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "Why must the 'Objective' column in 'Mission' of 'space_research_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "Which statement best describes a domain constraint on 'Name' in 'Satellite' of 'space_research_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What happens if data in 'LaunchDate' of 'Satellite' in 'space_research_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the database enforce valid data entry in 'AssignmentID' of 'MissionAssignment' in 'space_research_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of defining domain constraints on 'MissionsCount' in 'Astronaut' in 'space_research_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "Why must the 'Name' column in 'Astronaut' of 'space_research_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the 'OrderDate' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the 'OrderDate' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the 'CustomerID' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the 'Phone' column in 'Customers' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the 'CustomerID' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Departments' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Departments' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What makes 'Name' a candidate key in the 'Departments' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the 'Email' column in 'Faculty' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the 'Grade' column in 'Enrollments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the 'EnrollmentID' column in 'Enrollments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the 'Email' column in 'Students' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the 'DepartmentName' column in 'Departments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the 'Email' column in 'Faculty' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'Grade' a candidate key in the 'Enrollments' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'Name' a candidate key in the 'Students' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'EnrollmentID' a candidate key in the 'Enrollments' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Departments' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Courses' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'CourseID' a candidate key in the 'Enrollments' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'CourseName' a candidate key in the 'Courses' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'CourseName' a candidate key in the 'Courses' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What makes 'CourseName' a candidate key in the 'Courses' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'Country' in 'Astronaut' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'AssignmentID' in 'MissionAssignment' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'AssignmentID' in 'MissionAssignment' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'SatelliteID' in 'Satellite' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'EndDate' in 'Mission' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'Status' in 'Satellite' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'MissionID' in 'Mission' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'MissionID' in 'MissionAssignment' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'Objective' in 'Mission' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'MissionsCount' in 'Astronaut' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'LaunchDate' in 'Satellite' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'MissionID' in 'MissionAssignment' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Appointment' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Doctor' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'MedicalRecord' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'MedicalRecord' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Patient' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Appointment' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Doctor' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Doctor' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "How does the 'CropID' column in 'Harvest' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "How does the 'QuantityKG' column in 'Harvest' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "How does the 'FarmID' column in 'Harvest' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "How does the 'FarmerID' column in 'Farm' of 'farming_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What makes 'CustomerID' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What makes 'CustomerID' a candidate key in the 'Customers' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What makes 'OrderID' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What makes 'OrderDate' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What makes 'Email' a candidate key in the 'Customers' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What makes 'OrderID' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'AssignmentID' in 'MissionAssignment' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'Country' in 'Astronaut' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'SatelliteID' in 'Satellite' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'LaunchDate' in 'Satellite' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Mission' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'MissionsCount' in 'Astronaut' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Enrollments' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Faculty' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Students' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Courses' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Courses' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Orders' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Orders' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Orders' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Orders' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'MissionID' column in 'Mission' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'Objective' column in 'Mission' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'AstronautID' column in 'Astronaut' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'MissionID' column in 'MissionAssignment' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'AstronautID' column in 'MissionAssignment' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'AssignmentID' column in 'MissionAssignment' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'AstronautID' column in 'MissionAssignment' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'Name' column in 'Mission' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the 'AssignmentID' column in 'MissionAssignment' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "Why must the 'Name' column in 'Employees' of 'company_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "Which statement best describes a domain constraint on 'Email' in 'Employees' of 'company_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What happens if data in 'Name' of 'Employees' in 'company_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the database enforce valid data entry in 'Name' of 'Departments' in 'company_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the purpose of defining domain constraints on 'DepartmentID' in 'Departments' in 'company_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "Why must the 'DepartmentID' column in 'Employees' of 'company_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "Which statement best describes a domain constraint on 'EmployeeID' in 'Employees' of 'company_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What happens if data in 'Name' of 'Departments' in 'company_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Doctor' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Doctor' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Appointment' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Doctor' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the 'Country' column in 'Astronaut' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the 'Objective' column in 'Mission' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the 'Name' column in 'Astronaut' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the 'Name' column in 'Astronaut' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the 'Status' column in 'Satellite' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What makes 'AppointmentDate' a candidate key in the 'Appointment' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What makes 'Prescription' a candidate key in the 'MedicalRecord' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What makes 'PatientID' a candidate key in the 'Appointment' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What makes 'PatientID' a candidate key in the 'Patient' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Employees' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'EmployeeID' column in 'Employees' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'Email' column in 'Employees' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Employees' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the 'Prescription' column in 'MedicalRecord' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the 'DoctorID' column in 'Doctor' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the 'Reason' column in 'Appointment' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the 'PatientID' column in 'Patient' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the 'Name' column in 'Doctor' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What makes 'Location' a candidate key in the 'Farm' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What makes 'FarmID' a candidate key in the 'Farm' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What makes 'SoilType' a candidate key in the 'Crop' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What makes 'Name' a candidate key in the 'Farmer' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Enrollments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Courses' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Courses' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Students' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Departments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Students' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Faculty' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Faculty' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Enrollments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Faculty' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Faculty' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'OrderID' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'OrderDate' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'OrderID' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Phone' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Phone' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'OrderID' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'Reason' column in 'Appointment' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'PatientID' column in 'MedicalRecord' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'PatientID' column in 'Patient' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'PatientID' column in 'Patient' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'DoctorID' column in 'Doctor' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'Gender' column in 'Patient' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'PatientID' column in 'Patient' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'Prescription' column in 'MedicalRecord' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'DoctorID' column in 'Appointment' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'DoctorID' column in 'Doctor' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'DateRecorded' column in 'MedicalRecord' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'PatientID' column in 'MedicalRecord' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'DoctorID' column in 'Doctor' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the 'Name' column in 'Patient' of 'hospital_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Orders' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What does the relational schema define for the 'Customers' table in 'retail_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the 'AstronautID' column in 'Astronaut' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "How does the 'MissionsCount' column in 'Astronaut' of 'space_research_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "Why must the 'Phone' column in 'Patient' of 'hospital_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "Which statement best describes a domain constraint on 'AppointmentID' in 'Appointment' of 'hospital_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What happens if data in 'Name' of 'Doctor' in 'hospital_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the database enforce valid data entry in 'DoctorID' of 'Appointment' in 'hospital_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What is the purpose of defining domain constraints on 'DoctorID' in 'Doctor' in 'hospital_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "Why must the 'PatientID' column in 'Appointment' of 'hospital_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "Which statement best describes a domain constraint on 'AppointmentID' in 'Appointment' of 'hospital_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What happens if data in 'Diagnosis' of 'MedicalRecord' in 'hospital_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'HODId' in 'Departments' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'CourseName' in 'Courses' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'CourseID' in 'Enrollments' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'PhoneNo' in 'Students' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Students' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'CourseCode' in 'Courses' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Courses' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Faculty' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'EmployeeID' column in 'Employees' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'FacultyID' in 'Courses' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'EnrollmentID' in 'Enrollments' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Faculty' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'CourseCode' in 'Courses' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'Grade' in 'Enrollments' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Departments' of 'college_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What makes 'CustomerID' a candidate key in the 'Customers' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What makes 'CustomerID' a candidate key in the 'Customers' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What makes 'OrderID' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What makes 'Phone' a candidate key in the 'Customers' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What makes 'CustomerID' a candidate key in the 'Customers' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Satellite' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Satellite' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'EmployeeID' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Satellite' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'MissionAssignment' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Satellite' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Satellite' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "Why must the 'CustomerID' column in 'Customers' of 'retail_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "Which statement best describes a domain constraint on 'OrderDate' in 'Orders' of 'retail_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What happens if data in 'OrderDate' of 'Orders' in 'retail_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "How does the database enforce valid data entry in 'OrderDate' of 'Orders' in 'retail_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What is the purpose of defining domain constraints on 'Phone' in 'Customers' in 'retail_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "Why must the 'OrderID' column in 'Orders' of 'retail_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "Which statement best describes a domain constraint on 'Name' in 'Customers' of 'retail_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "retail_db",
        "question": "What happens if data in 'Phone' of 'Customers' in 'retail_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "How does the NOT NULL constraint on 'MissionsCount' in 'Astronaut' of 'space_research_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'MissionAssignment' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Mission' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the role of assertion constraints in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'PatientID' column in 'MedicalRecord' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'Prescription' column in 'MedicalRecord' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'PatientID' column in 'MedicalRecord' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'AppointmentDate' column in 'Appointment' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the purpose of key constraints on the 'Phone' column in 'Patient' of 'hospital_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What makes 'OrderID' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What makes 'OrderDate' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What makes 'OrderID' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What makes 'OrderID' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What makes 'OrderID' a candidate key in the 'Orders' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What makes 'CustomerID' a candidate key in the 'Customers' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What makes 'Email' a candidate key in the 'Customers' table of 'retail_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What makes 'DoctorID' a candidate key in the 'Doctor' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What makes 'AppointmentID' a candidate key in the 'Appointment' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What makes 'PatientID' a candidate key in the 'Patient' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What makes 'Name' a candidate key in the 'Patient' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What makes 'AppointmentID' a candidate key in the 'Appointment' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What makes 'Specialization' a candidate key in the 'Doctor' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the role of assertion constraints in the 'Employees' table of 'company_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Mission' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Astronaut' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'MissionAssignment' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Mission' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Satellite' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Astronaut' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'MissionAssignment' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "Why must the 'SatelliteID' column in 'Satellite' of 'space_research_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "Which statement best describes a domain constraint on 'Name' in 'Satellite' of 'space_research_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What happens if data in 'Name' of 'Mission' in 'space_research_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "How does the database enforce valid data entry in 'Name' of 'Satellite' in 'space_research_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the purpose of defining domain constraints on 'Name' in 'Satellite' in 'space_research_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "Why must the 'Name' column in 'Astronaut' of 'space_research_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "Which statement best describes a domain constraint on 'StartDate' in 'Mission' of 'space_research_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What makes 'DateRecorded' a candidate key in the 'MedicalRecord' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What makes 'Gender' a candidate key in the 'Patient' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What makes 'Name' a candidate key in the 'Doctor' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What makes 'Phone' a candidate key in the 'Patient' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What makes 'Diagnosis' a candidate key in the 'MedicalRecord' table of 'hospital_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What makes 'PhoneNo' a candidate key in the 'Students' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Departments' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Faculty' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Faculty' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What makes 'PhoneNo' a candidate key in the 'Students' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What makes 'CourseID' a candidate key in the 'Enrollments' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What makes 'DepartmentName' a candidate key in the 'Departments' table of 'college_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What makes 'SoilType' a candidate key in the 'Crop' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What makes 'Name' a candidate key in the 'Farmer' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What makes 'Season' a candidate key in the 'Crop' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What makes 'Location' a candidate key in the 'Farm' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What makes 'FarmerID' a candidate key in the 'Farmer' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Orders' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Orders' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the role of assertion constraints in the 'Customers' table of 'retail_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "Why must the 'Credits' column in 'Courses' of 'college_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "Which statement best describes a domain constraint on 'CourseCode' in 'Courses' of 'college_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What happens if data in 'EnrollmentID' of 'Enrollments' in 'college_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the database enforce valid data entry in 'DepartmentID' of 'Students' in 'college_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the purpose of defining domain constraints on 'CourseCode' in 'Courses' in 'college_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "Why must the 'PhoneNo' column in 'Faculty' of 'college_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "Which statement best describes a domain constraint on 'DepartmentName' in 'Departments' of 'college_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What happens if data in 'FacultyName' of 'Faculty' in 'college_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Faculty' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Courses' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Courses' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Courses' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Enrollments' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Faculty' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Courses' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Students' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Courses' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Departments' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Students' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Enrollments' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Courses' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the role of assertion constraints in the 'Faculty' table of 'college_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What makes 'Status' a candidate key in the 'Satellite' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What makes 'MissionID' a candidate key in the 'MissionAssignment' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What makes 'AstronautID' a candidate key in the 'MissionAssignment' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What makes 'EndDate' a candidate key in the 'Mission' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What makes 'AstronautID' a candidate key in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'StudentID' column in 'Enrollments' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'CourseID' column in 'Enrollments' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'EnrollmentYear' column in 'Students' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'FacultyName' column in 'Faculty' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'EnrollmentID' column in 'Enrollments' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "Why must the 'CustomerID' column in 'Orders' of 'retail_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "Which statement best describes a domain constraint on 'OrderDate' in 'Orders' of 'retail_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What happens if data in 'CustomerID' of 'Orders' in 'retail_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "How does the database enforce valid data entry in 'CustomerID' of 'Customers' in 'retail_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "What is the purpose of defining domain constraints on 'OrderID' in 'Orders' in 'retail_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "Why must the 'Email' column in 'Customers' of 'retail_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "retail_db",
        "question": "Which statement best describes a domain constraint on 'CustomerID' in 'Orders' of 'retail_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'EmployeeID' column in 'Employees' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Departments' of 'company_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'EndDate' column in 'Mission' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Astronaut' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Mission' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Mission' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'MissionsCount' column in 'Astronaut' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'LaunchDate' column in 'Satellite' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'MissionID' column in 'MissionAssignment' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What makes 'MissionsCount' a candidate key in the 'Astronaut' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What makes 'SatelliteID' a candidate key in the 'Satellite' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What makes 'Objective' a candidate key in the 'Mission' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "hard",
        "db_name": "space_research_db",
        "question": "What makes 'StartDate' a candidate key in the 'Mission' table of 'space_research_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Departments' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'EmployeeID' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Departments' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Departments' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "Why must the 'Specialization' column in 'Doctor' of 'hospital_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "Which statement best describes a domain constraint on 'Name' in 'Doctor' of 'hospital_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What happens if data in 'Name' of 'Patient' in 'hospital_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the database enforce valid data entry in 'DOB' of 'Patient' in 'hospital_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the purpose of defining domain constraints on 'Email' in 'Doctor' in 'hospital_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "Why must the 'Email' column in 'Doctor' of 'hospital_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "Which statement best describes a domain constraint on 'Specialization' in 'Doctor' of 'hospital_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What happens if data in 'Gender' of 'Patient' in 'hospital_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What makes 'EmployeeID' a candidate key in the 'Employees' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Employees' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What makes 'EmployeeID' a candidate key in the 'Employees' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What makes 'DepartmentID' a candidate key in the 'Departments' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What makes 'EmployeeID' a candidate key in the 'Employees' table of 'company_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Astronaut' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Satellite' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Mission' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'MissionAssignment' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Mission' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Astronaut' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'MissionAssignment' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Satellite' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'MissionAssignment' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "space_research_db",
        "question": "What does the relational schema define for the 'Mission' table in 'space_research_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'MedicalRecord' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Appointment' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Patient' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'MedicalRecord' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'MedicalRecord' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What makes 'QuantityKG' a candidate key in the 'Harvest' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What makes 'Season' a candidate key in the 'Crop' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What makes 'Season' a candidate key in the 'Crop' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What makes 'HarvestDate' a candidate key in the 'Harvest' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What makes 'CropName' a candidate key in the 'Crop' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Candidate Keys and Primary Key",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What makes 'HarvestID' a candidate key in the 'Harvest' table of 'farming_db'?",
        "options": [
            "It uniquely identifies rows",
            "It is always a foreign key",
            "It can store duplicate values",
            "It must contain NULLs"
        ],
        "answer": "It uniquely identifies rows"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Employees' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Employees' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Employees' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Departments' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Departments' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Employees' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the NOT NULL constraint on 'DepartmentID' in 'Departments' of 'company_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Courses' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Courses' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Courses' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Departments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Departments' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "What does the relational schema define for the 'Students' table in 'college_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "Why must the 'StudentID' column in 'Enrollments' of 'college_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "Which statement best describes a domain constraint on 'Grade' in 'Enrollments' of 'college_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What happens if data in 'Credits' of 'Courses' in 'college_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Phone' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Customers' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "How does the NOT NULL constraint on 'OrderDate' in 'Orders' of 'retail_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'FarmerID' in 'Farmer' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'HarvestID' in 'Harvest' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'Region' in 'Farmer' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'FarmerID' in 'Farm' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'CropName' in 'Crop' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'FarmerID' in 'Farmer' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'FarmerID' column in 'Farmer' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'FarmerID' column in 'Farm' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'Region' column in 'Farmer' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'Season' column in 'Crop' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'Location' column in 'Farm' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'SoilType' column in 'Crop' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'FarmerID' column in 'Farmer' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'CropName' column in 'Crop' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "Why must the 'AppointmentDate' column in 'Appointment' of 'hospital_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "Which statement best describes a domain constraint on 'DoctorID' in 'Doctor' of 'hospital_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What happens if data in 'Prescription' of 'MedicalRecord' in 'hospital_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "How does the database enforce valid data entry in 'Specialization' of 'Doctor' in 'hospital_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the purpose of defining domain constraints on 'PatientID' in 'MedicalRecord' in 'hospital_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "Why must the 'RecordID' column in 'MedicalRecord' of 'hospital_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "Which statement best describes a domain constraint on 'Specialization' in 'Doctor' of 'hospital_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What happens if data in 'DOB' of 'Patient' in 'hospital_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the 'EmployeeID' column in 'Employees' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the 'EmployeeID' column in 'Employees' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the 'Email' column in 'Employees' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "company_db",
        "question": "How does the 'Name' column in 'Departments' of 'company_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Crop' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Farmer' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Farmer' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'FacultyID' column in 'Faculty' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'HODId' column in 'Departments' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Departments' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'StudentID' column in 'Students' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'DepartmentID' column in 'Faculty' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'PhoneNo' column in 'Faculty' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Departments' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Employees' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Departments' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What does the relational schema define for the 'Employees' table in 'company_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Crop' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Farmer' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What does the relational schema define for the 'Farm' table in 'farming_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'CropName' in 'Crop' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'HarvestID' in 'Harvest' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'HarvestID' in 'Harvest' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Satellite' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'EndDate' column in 'Mission' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'AstronautID' column in 'MissionAssignment' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'AstronautID' column in 'Astronaut' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'MissionsCount' column in 'Astronaut' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'Name' column in 'Astronaut' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "space_research_db",
        "question": "What is the purpose of key constraints on the 'MissionID' column in 'Mission' of 'space_research_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the 'Designation' column in 'Faculty' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the 'DepartmentID' column in 'Departments' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the 'DepartmentID' column in 'Faculty' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the 'Name' column in 'Students' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "medium",
        "db_name": "college_db",
        "question": "How does the 'Designation' column in 'Faculty' of 'college_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Farm' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Harvest' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Harvest' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Farmer' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Crop' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Harvest' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Crop' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Harvest' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "Why must the 'OrderDate' column in 'Orders' of 'retail_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "Which statement best describes a domain constraint on 'CustomerID' in 'Orders' of 'retail_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What happens if data in 'OrderDate' of 'Orders' in 'retail_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "How does the database enforce valid data entry in 'Email' of 'Customers' in 'retail_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "What is the purpose of defining domain constraints on 'Email' in 'Customers' in 'retail_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "Why must the 'Name' column in 'Customers' of 'retail_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "Which statement best describes a domain constraint on 'Phone' in 'Customers' of 'retail_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'PatientID' in 'Appointment' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Diagnosis' in 'MedicalRecord' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'DOB' in 'Patient' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Specialization' in 'Doctor' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'DoctorID' in 'Doctor' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'RecordID' in 'MedicalRecord' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "medium",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Email' in 'Doctor' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'RecordID' in 'MedicalRecord' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Name' in 'Patient' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "How does the NOT NULL constraint on 'Prescription' in 'MedicalRecord' of 'hospital_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'HarvestDate' column in 'Harvest' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'Season' column in 'Crop' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "hard",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'Phone' column in 'Farmer' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'CropID' in 'Harvest' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "NOT NULL & Entity Integrity",
        "difficulty": "easy",
        "db_name": "farming_db",
        "question": "How does the NOT NULL constraint on 'CropName' in 'Crop' of 'farming_db' ensure entity integrity?",
        "options": [
            "By disallowing missing essential data",
            "By linking databases",
            "By sorting rows",
            "By setting auto-increment"
        ],
        "answer": "By disallowing missing essential data"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Harvest' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Farmer' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Crop' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What is the role of assertion constraints in the 'Crop' table of 'farming_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'MedicalRecord' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Patient' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Appointment' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Doctor' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Assertion Constraints",
        "difficulty": "easy",
        "db_name": "hospital_db",
        "question": "What is the role of assertion constraints in the 'Appointment' table of 'hospital_db'?",
        "options": [
            "They enforce custom rules beyond basic constraints",
            "They allow table deletion",
            "They manage indexes",
            "They define foreign keys"
        ],
        "answer": "They enforce custom rules beyond basic constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "Why must the 'FarmID' column in 'Farm' of 'farming_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "Which statement best describes a domain constraint on 'FarmerID' in 'Farmer' of 'farming_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "Why must the 'EmployeeID' column in 'Employees' of 'company_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "Which statement best describes a domain constraint on 'Email' in 'Employees' of 'company_db'?",
        "options": [
            "It restricts values to a specific type",
            "It enforces referential integrity",
            "It enables multi-user access",
            "It ensures cascading updates"
        ],
        "answer": "It restricts values to a specific type"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What happens if data in 'DepartmentID' of 'Employees' in 'company_db' violates a domain constraint?",
        "options": [
            "The insert/update is rejected",
            "The entire database is locked",
            "A new user is created",
            "The key is dropped"
        ],
        "answer": "The insert/update is rejected"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "How does the database enforce valid data entry in 'DepartmentID' of 'Departments' in 'company_db'?",
        "options": [
            "By applying domain constraints",
            "By removing foreign keys",
            "By defining index positions",
            "By encrypting data"
        ],
        "answer": "By applying domain constraints"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "What is the purpose of defining domain constraints on 'Name' in 'Departments' in 'company_db'?",
        "options": [
            "To limit acceptable values",
            "To determine index depth",
            "To manage user privileges",
            "To optimize queries"
        ],
        "answer": "To limit acceptable values"
    },
    {
        "topic": "Domain Constraints",
        "difficulty": "easy",
        "db_name": "company_db",
        "question": "Why must the 'Name' column in 'Departments' of 'company_db' follow a specific data type?",
        "options": [
            "To maintain data consistency",
            "To allow random values",
            "To enforce primary keys",
            "To define join conditions"
        ],
        "answer": "To maintain data consistency"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Appointment' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Appointment' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'Doctor' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Relational Schema",
        "difficulty": "hard",
        "db_name": "hospital_db",
        "question": "What does the relational schema define for the 'MedicalRecord' table in 'hospital_db'?",
        "options": [
            "Structure of the table",
            "Values of a specific column",
            "User access roles",
            "Storage location"
        ],
        "answer": "Structure of the table"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'Location' column in 'Farm' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'FarmerID' column in 'Farmer' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "medium",
        "db_name": "farming_db",
        "question": "What is the purpose of key constraints on the 'FarmerID' column in 'Farm' of 'farming_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'FacultyID' column in 'Courses' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'Grade' column in 'Enrollments' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Key Constraints",
        "difficulty": "easy",
        "db_name": "college_db",
        "question": "What is the purpose of key constraints on the 'StudentID' column in 'Enrollments' of 'college_db'?",
        "options": [
            "To ensure unique identification",
            "To restrict data types",
            "To allow multiple NULLs",
            "To drop the table"
        ],
        "answer": "To ensure unique identification"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "How does the 'Name' column in 'Customers' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "How does the 'OrderID' column in 'Orders' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    },
    {
        "topic": "Foreign Key and Referential Integrity",
        "difficulty": "hard",
        "db_name": "retail_db",
        "question": "How does the 'Email' column in 'Customers' of 'retail_db' enforce referential integrity?",
        "options": [
            "By linking to a primary key in another table",
            "By storing encrypted data",
            "By increasing query speed",
            "By acting as a temporary key"
        ],
        "answer": "By linking to a primary key in another table"
    }
]